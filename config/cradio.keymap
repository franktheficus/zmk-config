/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

&sk {
		quick-release;
	};

/ {

	combos {
		compatible = "zmk,combos";

		combo_esc {
			timeout-ms = <50>;
			key-positions = <1 2>;
			bindings = <&kp ESC>;
		};

		combo_bspc {
			timeout-ms = <50>;
			key-positions = <7 8>;
			bindings = <&kp BKSP>;
		};

		combo_tab {
			timeout-ms = <50>;
			key-positions = <21 22>;
			bindings = <&kp TAB>;
		};

		combo_tab {
			timeout-ms = <50>;
			key-positions = <27 28>;
			bindings = <&kp TAB>;
		};
	};

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <175>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
		td: tap_dance {
			compatible = "zmk,behavior-tap-dance";
			label = "TAP_DANCE";
			#binding-cells = <0>;
			tapping-term-ms = <150>;
			flavor = "tap-preferred";
			bindings = <&sk>, <&caps_word>;
		};
    };

        keymap {
                compatible = "zmk,keymap";
                
       		default_layer {
		bindings = <
		&hm LCTRL SQT &kp W &kp F &kp P &kp B 					&kp J &kp L  &kp U    &kp Y   &hm LCTRL Q
		&kp A &kp R &kp S &lt 4 T &kp G 			       	    &kp M &kp N  &kp E    &kp I   &kp O
		&kp Z &hm LALT X &kp C &kp D &kp V				        &kp K &kp H  &kp CMMA &kp DOT &kp FSLH
          				            &mo 1 &kp SPC  		&td LSHFT &sl 2 
		>;
		};

       		left_layer {
		bindings = <
		&kp FSLH  &kp N7   &kp N8  &kp N9  &kp PLUS		        &none    &kp C_PP  &kp C_NEXT &none     &none 
		&kp N0    &kp N4   &kp N5  &kp N6  &kp MINUS 		    &kp LEFT &kp DOWN  &kp UP     &kp RIGHT &kp BKSP 
		&kp LSHFT &kp N1   &kp N2  &kp N3  &kp EQUAL 	        &kp RET  &none     &kp CMMA   &kp DOT   &none 
					                &trans  &trans 			&trans &mo 3 
		>;
		};
		
		right_layer {
		bindings = <
		&none     &kp AMPS  &kp STAR  &none     &none    		&kp EXCL  &kp COLON &kp LPAR &kp RPAR &kp SEMI 
		&kp DEL   &kp DLLR  &kp PRCNT &kp CARET &none			&kp MINUS &kp EQUAL &kp LBKT &kp RBKT &kp GRAVE
		&kp LSHFT &kp EXCL  &kp AT    &kp HASH  &none   			&kp RET   &kp PIPE  &kp CMMA &kp DOT  &kp BSLH
					                 &mo 3    &trans  		&trans  &trans 
		>;
		};	
		
		tri_layer {
		bindings = <
		&kp NUM_1  &kp NUM_2  &kp NUM_3  &kp NUM_4 &kp NUM_5 			&trans &trans   &trans   &trans  &trans
		&kp F1     &kp F2     &kp F3     &kp F4    &kp F5  				&trans &kp PG_UP  &kp K_VOL_UP &kp K_MUTE &trans 
		&bt BT_CLR &bt BT_NXT &bt BT_PRV &kp F6    &bootloader   		&bootloader &kp PG_DN  &kp K_VOL_DN  &trans &trans   
					                    &trans &trans  		&trans &trans 
		>;
		};

        layer_4 {
		bindings = <
		&kp ESC  &none    &none    &none  &none  			    &none    &none     &none     &none     &none
		&kp DEL  &kp LALT &kp LGUI &trans &none  				&kp LEFT &kp DOWN  &kp UP    &kp RIGHT &kp BKSP 
		&kp TAB  &none    &none    &none  &none   				&kp RET  &kp PG_UP &kp PG_DN &none     &none   
					                    &trans &trans  		&trans &trans 
		>;
		};	
        
	};
};
